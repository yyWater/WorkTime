apply plugin: 'com.android.application'

def dbflow_version = "4.2.4"
def material_calendar_version = "1.4.3"
def butterKnifeVersion = "8.8.1"

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.yy.worktime"
        minSdkVersion 22
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
//            storeFile file('../config_file/androidsign.jks')
            storeFile rootProject.file('config_file/appSign_debug.jks')
            storePassword 'yy@0127'
            keyAlias 'yysign'
            keyPassword 'yy@0127'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug{
            signingConfig signingConfigs.debug
        }
    }

    // Rename file name of APK which is built by Android Studio
    applicationVariants.all { variant ->

        def appName = "WorkTime";

        variant.outputs.all{
            def buildldTypeName =  "${buildType.name}"

            println("buildldTypeName -- " + buildldTypeName)

            if(!buildldTypeName.contains("release")){
                outputFileName = "${appName}-${variant.name}-${variant.versionName}-${packageTime()}.apk"
            }else{

                outputFileName = "${appName}-${variant.name}-${variant.versionName}-${packageTime()}.apk"
            }
        }

        /*variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "WortTime" +
                        "_v" + defaultConfig.versionName +
                        "_build" + defaultConfig.versionCode +
                        "_" + packageTime() +
                        "_" + buildType.name +
                        ".apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }*/
    }


}

def static packageTime() {
    return new Date().format('yyyyMMdd', TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    compile project(':base')

    //dbflow
    // if Java use this. If using Kotlin do NOT use this.
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"

    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"

    // sql-cipher database encryption (optional)
    /*compile "com.github.Raizlabs.DBFlow:dbflow-sqlcipher:${dbflow_version}"
    compile "net.zetetic:android-database-sqlcipher:${sqlcipher_version}@aar"*/

    // RXJava 2 support
    compile "com.github.Raizlabs.DBFlow:dbflow-rx2:${dbflow_version}"

    compile "com.prolificinteractive:material-calendarview:${material_calendar_version}"

    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
}
